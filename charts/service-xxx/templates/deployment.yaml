apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ template "service-xxx.name" . }}
  labels:
    app: {{ template "service-xxx.name" . }}
    chart: {{ template "service-xxx.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "service-xxx.name" . }}
      release: {{ .Release.Name }}
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: {{ template "service-xxx.name" . }}
        release: {{ .Release.Name }}
    spec:
      terminationGracePeriodSeconds: 30
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env:
        - name: USE_CONFIG_SERVER
          value: "false"
        - name: CONFIG_SERVER_ADDRESS
          value: config:8080
        - name: APPLICATION_NAME
          value: {{ .Chart.Name }}
        - name: TAG
          value: dev
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        livenessProbe:
          tcpSocket:
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          tcpSocket:
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        resources:
          limits:
            cpu: 2
            memory: 4Gi
          requests:
            cpu: 200m
            memory: 1Gi
        securityContext:
          privileged: false
      imagePullSecrets:
      - name: myregistrykey
